{"ast":null,"code":"var _jsxFileName = \"C:\\\\Leo\\\\Work\\\\FSD\\\\CaseStudy\\\\mentor-on-demand-ui\\\\src\\\\components\\\\CurrentTrainings\\\\CurrentTrainings.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport { connect } from 'react-redux';\nimport Header from '../Header/Header.js';\nimport './currenttrainings.css';\nimport { Constant } from '../../constants/AppConstants.js';\nimport { setUserId } from '../../store/action.js';\n\nfunction mapStateToProps(state, props) {\n  return {\n    userId: state.userId\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setUserId: userId => {\n    dispatch(setUserId(userId));\n  }\n});\n\nclass CurrentTrainings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inprogressTrainings: [],\n      proposedTrainings: [],\n      confirmedTrainings: [],\n      scholar: this.props.userId\n    };\n    this.fetchTrainings('inprogress');\n    this.fetchTrainings('proposed');\n    this.fetchTrainings('confirmed');\n  }\n\n  fetchTrainings(status) {\n    const {\n      scholar\n    } = this.state;\n    var {\n      inprogressTrainings,\n      proposedTrainings,\n      confirmedTrainings\n    } = this.state;\n    const url = Constant.BASE_URL + '/training/scholar/' + scholar + '/status/' + status;\n    fetch(url, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => {\n      result.map(function (item) {\n        if (status == 'inprogress') {\n          inprogressTrainings.push(item);\n        } else if (status == 'proposed') {\n          proposedTrainings.push(item);\n        } else if (status == 'confirmed') {\n          confirmedTrainings.push(item);\n        }\n      });\n      this.setState({\n        inprogressTrainings: inprogressTrainings\n      });\n      this.setState({\n        proposedTrainings: proposedTrainings\n      });\n      this.setState({\n        confirmedTrainings: confirmedTrainings\n      });\n    });\n  }\n\n  getTable(status) {\n    return React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"col\", {\n      width: \"50\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"col\", {\n      width: \"150\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"col\", {\n      width: \"150\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"col\", {\n      width: \"50\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"col\", {\n      width: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"col\", {\n      width: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"col\", {\n      width: \"50\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Training ID\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Technology\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Mentor\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Progress\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Start Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"End Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Status\"))), this.getTableBody(status));\n  }\n\n  getTableBody(status) {\n    var rows = [];\n    const {\n      inprogressTrainings,\n      proposedTrainings,\n      confirmedTrainings\n    } = this.state;\n    var trainings = [];\n\n    if (status == 'inprogress') {\n      trainings = inprogressTrainings;\n    } else if (status == 'proposed') {\n      trainings = proposedTrainings;\n    } else if (status == 'confirmed') {\n      trainings = confirmedTrainings;\n    }\n\n    for (const [index, value] of trainings.entries()) {\n      rows.push(React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, value.id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, value.technology), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, value.mentor), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, value.progress), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, value.startdate), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, value.enddate), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, value.status)));\n    }\n\n    return React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, rows);\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      class: \"current-trainings-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"inprogress-trainings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"In-progress Trainings\"), this.getTable('inprogress')), React.createElement(\"div\", {\n      class: \"confirmed-trainings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Confirmed Trainings\"), this.getTable('confirmed')), React.createElement(\"div\", {\n      class: \"proposed-trainings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Proposed Trainings\"), this.getTable('proposed')));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrentTrainings);","map":{"version":3,"sources":["C:/Leo/Work/FSD/CaseStudy/mentor-on-demand-ui/src/components/CurrentTrainings/CurrentTrainings.js"],"names":["React","Component","$","connect","Header","Constant","setUserId","mapStateToProps","state","props","userId","mapDispatchToProps","dispatch","CurrentTrainings","constructor","inprogressTrainings","proposedTrainings","confirmedTrainings","scholar","fetchTrainings","status","url","BASE_URL","fetch","method","headers","then","res","json","result","map","item","push","setState","getTable","getTableBody","rows","trainings","index","value","entries","id","technology","mentor","progress","startdate","enddate","componentDidMount","componentDidUpdate","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport $ from 'jquery';\r\nimport {connect} from 'react-redux';\r\nimport Header from '../Header/Header.js';\r\nimport './currenttrainings.css';\r\nimport {Constant} from '../../constants/AppConstants.js';\r\nimport {setUserId} from '../../store/action.js';\r\n\r\nfunction mapStateToProps(state, props) {\r\n    return {\r\n      userId: state.userId\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setUserId: userId => {\r\n    dispatch(setUserId(userId));\r\n  },\r\n});\r\n\r\nclass CurrentTrainings extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      inprogressTrainings: [],\r\n      proposedTrainings: [],\r\n      confirmedTrainings: [],\r\n      scholar: this.props.userId\r\n    };\r\n    this.fetchTrainings('inprogress');\r\n    this.fetchTrainings('proposed');\r\n    this.fetchTrainings('confirmed');\r\n  }\r\n\r\n  fetchTrainings(status) {\r\n    const {scholar} = this.state;\r\n    var {inprogressTrainings, proposedTrainings, confirmedTrainings} = this.state;\r\n    const url = Constant.BASE_URL + '/training/scholar/' + scholar + '/status/' + status;\r\n    fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      }})\r\n    .then(res => res.json())\r\n    .then(\r\n      (result) => {\r\n        result.map(function(item) {\r\n          if(status == 'inprogress') {\r\n            inprogressTrainings.push(item);\r\n          } else if (status == 'proposed') {\r\n            proposedTrainings.push(item);\r\n          } else if (status == 'confirmed') {\r\n            confirmedTrainings.push(item);\r\n          }\r\n        });\r\n        this.setState({inprogressTrainings: inprogressTrainings});\r\n        this.setState({proposedTrainings: proposedTrainings});\r\n        this.setState({confirmedTrainings: confirmedTrainings});\r\n      }\r\n    );\r\n  }\r\n\r\n  getTable(status) {\r\n    return (\r\n      <table>\r\n        <col width=\"50\"/>\r\n        <col width=\"150\"/>\r\n        <col width=\"150\"/>\r\n        <col width=\"50\"/>\r\n        <col width=\"100\"/>\r\n        <col width=\"100\"/>\r\n        <col width=\"50\"/>\r\n        <thead>\r\n          <tr>\r\n            <th>Training ID</th>\r\n            <th>Technology</th>\r\n            <th>Mentor</th>\r\n            <th>Progress</th>\r\n            <th>Start Date</th>\r\n            <th>End Date</th>\r\n            <th>Status</th>\r\n          </tr>\r\n        </thead>\r\n        {this.getTableBody(status)}\r\n      </table>\r\n    );\r\n  }\r\n\r\n  getTableBody(status) {\r\n    var rows = [];\r\n    const {inprogressTrainings, proposedTrainings, confirmedTrainings} = this.state;\r\n    var trainings = [];\r\n    if(status == 'inprogress') {\r\n      trainings = inprogressTrainings;\r\n    } else if (status == 'proposed') {\r\n      trainings = proposedTrainings;\r\n    } else if (status == 'confirmed') {\r\n      trainings = confirmedTrainings;\r\n    }\r\n    for (const [index, value] of trainings.entries()) {\r\n      rows.push(\r\n        <tr>\r\n          <td>{value.id}</td>\r\n          <td>{value.technology}</td>\r\n          <td>{value.mentor}</td>\r\n          <td>{value.progress}</td>\r\n          <td>{value.startdate}</td>\r\n          <td>{value.enddate}</td>\r\n          <td>{value.status}</td>\r\n        </tr>\r\n      );\r\n    }\r\n    return (\r\n      <tbody>\r\n        {rows}\r\n      </tbody>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  componentDidUpdate() {\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"current-trainings-container\">\r\n        <div class=\"inprogress-trainings\">\r\n          <h5>In-progress Trainings</h5>\r\n          {this.getTable('inprogress')}\r\n        </div>\r\n        <div class=\"confirmed-trainings\">\r\n          <h5>Confirmed Trainings</h5>\r\n          {this.getTable('confirmed')}\r\n        </div>\r\n        <div class=\"proposed-trainings\">\r\n          <h5>Proposed Trainings</h5>\r\n          {this.getTable('proposed')}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrentTrainings);\r\n"]},"metadata":{},"sourceType":"module"}