{"ast":null,"code":"var _jsxFileName = \"C:\\\\Leo\\\\Work\\\\FSD\\\\CaseStudy\\\\mentor-on-demand-ui\\\\src\\\\components\\\\Login\\\\Login.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport { connect } from 'react-redux';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport Header from '../Header/Header.js';\nimport './login.css';\nimport { Redirect } from 'react-router';\nimport Select from 'react-select';\nimport { Constant } from '../../constants/AppConstants.js';\nimport { setUserId } from '../../store/action.js';\n\nfunction mapStateToProps(state, props) {\n  return {\n    userId: state.userId\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setUserId: userId => {\n    dispatch(setUserId(userId));\n  }\n});\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSelect = name => value => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    alert('props' + this.props.userId);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.state = {\n      name: null,\n      email: null,\n      password: null,\n      location: null,\n      userInfo: {},\n      redirect: {\n        flag: false,\n        path: ''\n      },\n      userType: Constant.USER_TYPES[0]\n    };\n  }\n\n  handleClick(action) {\n    this.props.sendMessage(message);\n\n    if (!this.validateInputs(action)) {\n      //alert(\"Technology field is empty. Please select Technology from dropdown..\");\n      return;\n    }\n\n    if (action == 'login') {\n      this.validateUser();\n    } else if (action == 'register') {\n      this.registerUser();\n    }\n  }\n\n  validateUser() {\n    const url = Constant.BASE_URL + '/login/login';\n    const {\n      email,\n      password,\n      userInfo\n    } = this.state;\n    var query = {\n      email: email,\n      password: password\n    };\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(query)\n    }).then(res => res.json()).then(result => {\n      this.state.userInfo = result;\n      this.setState({\n        userInfo: result\n      });\n      this.routeUser();\n    }, error => {\n      return false;\n    });\n  }\n\n  registerUser() {\n    const url = Constant.BASE_URL + '/login/register';\n    const {\n      name,\n      email,\n      password,\n      location,\n      userType,\n      userInfo\n    } = this.state;\n    var query = {\n      name: name,\n      email: email,\n      password: password,\n      location: location,\n      usertype: userType.value\n    };\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(query)\n    }).then(res => res.json()).then(result => {\n      this.state.userInfo = result;\n      this.setState({\n        userInfo: result\n      });\n      this.routeUser();\n    }, error => {\n      return false;\n    });\n  }\n\n  routeUser() {\n    const {\n      userInfo,\n      redirect\n    } = this.state;\n\n    if (userInfo) {\n      if (userInfo.usertype == 'SCHOLAR') {\n        redirect.flag = true;\n        redirect.path = '/scholar';\n      } else if (userInfo.usertype == 'MENTOR') {\n        redirect.flag = true;\n        redirect.path = '/mentor';\n      } else if (userInfo.usertype == 'ADMIN') {\n        redirect.flag = true;\n        redirect.path = '/admin';\n      }\n    }\n\n    this.setState({\n      redirect: redirect\n    });\n  }\n\n  validateInputs(action) {\n    const {\n      name,\n      email,\n      password,\n      location\n    } = this.state;\n    if (!name && action == 'register') return false;\n    if (!email) return false;\n\n    if (email) {\n      if (!(email.includes('.') && email.includes('@'))) return false;\n    }\n\n    if (!password) return false;\n    if (!location && action == 'register') return false;\n    return true;\n  }\n\n  handleEmailChange(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  handleNameChange(e) {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  handlePasswordChange(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleLocationChange(e) {\n    this.setState({\n      location: e.target.value\n    });\n  }\n\n  getEmailElement() {\n    return React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      placeholder: \"Email\",\n      value: this.state.email,\n      onChange: this.handleEmailChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    });\n  }\n\n  getPasswordElement() {\n    return React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      placeholder: \"Password\",\n      value: this.state.password,\n      onChange: this.handlePasswordChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    });\n  }\n\n  getSubmitElement(action) {\n    return React.createElement(\"div\", {\n      class: \"submit-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-info\",\n      style: {\n        padding: '10px 70px'\n      },\n      onClick: () => this.handleClick(action),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate() {}\n\n  render() {\n    const {\n      redirect\n    } = this.state;\n\n    if (redirect.flag) {\n      return React.createElement(Redirect, {\n        to: redirect.path,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      class: \"login-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"tabs-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(TabList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"Login\"), React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"Register\")), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"div\", {\n      class: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, this.getEmailElement(), this.getPasswordElement(), this.getSubmitElement('login'))), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"Register\"), React.createElement(\"div\", {\n      class: \"register-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"usertype-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(Select, {\n      placeholder: \"User Type\",\n      isSearchable: true,\n      isMulti: false,\n      autoFocus: false,\n      onChange: this.handleSelect('userType'),\n      options: Constant.USER_TYPES,\n      value: this.state.userType,\n      name: \"userType\",\n      maxMenuHeight: 200,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      placeholder: \"Name\",\n      value: this.state.name,\n      onChange: this.handleNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), this.getEmailElement(), this.getPasswordElement(), React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      placeholder: \"Location\",\n      value: this.state.location,\n      onChange: this.handleLocationChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }), this.getSubmitElement('register'))))));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["C:/Leo/Work/FSD/CaseStudy/mentor-on-demand-ui/src/components/Login/Login.js"],"names":["React","Component","$","connect","Tab","Tabs","TabList","TabPanel","Header","Redirect","Select","Constant","setUserId","mapStateToProps","state","props","userId","mapDispatchToProps","dispatch","Login","constructor","handleSelect","name","value","setState","alert","handleClick","bind","handleEmailChange","handleNameChange","handlePasswordChange","handleLocationChange","email","password","location","userInfo","redirect","flag","path","userType","USER_TYPES","action","sendMessage","message","validateInputs","validateUser","registerUser","url","BASE_URL","query","fetch","method","headers","body","JSON","stringify","then","res","json","result","routeUser","error","usertype","includes","e","target","getEmailElement","getPasswordElement","getSubmitElement","padding","componentDidMount","componentDidUpdate","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport $ from 'jquery';\r\nimport {connect} from 'react-redux';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport Header from '../Header/Header.js';\r\nimport './login.css';\r\nimport { Redirect } from 'react-router'\r\nimport Select from 'react-select';\r\nimport {Constant} from '../../constants/AppConstants.js';\r\nimport {setUserId} from '../../store/action.js';\r\n\r\nfunction mapStateToProps(state, props) {\r\n    return {\r\n      userId: state.userId\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setUserId: userId => {\r\n    dispatch(setUserId(userId));\r\n  },\r\n});\r\n\r\n\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    alert('props' + this.props.userId);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleEmailChange = this.handleEmailChange.bind(this);\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n    this.handleLocationChange = this.handleLocationChange.bind(this);\r\n    this.handleSelect = this.handleSelect.bind(this);\r\n\r\n    this.state = {\r\n      name: null,\r\n      email: null,\r\n      password: null,\r\n      location: null,\r\n      userInfo: {},\r\n      redirect: {\r\n        flag: false,\r\n        path: ''\r\n      },\r\n      userType: Constant.USER_TYPES[0]\r\n    };\r\n  }\r\n\r\n  handleClick(action) {\r\n    this.props.sendMessage(message);\r\n    if(!this.validateInputs(action)) {\r\n      //alert(\"Technology field is empty. Please select Technology from dropdown..\");\r\n      return;\r\n    }\r\n    if(action == 'login') {\r\n      this.validateUser();\r\n    } else if(action == 'register') {\r\n      this.registerUser();\r\n    }\r\n  }\r\n\r\n  validateUser() {\r\n    const url = Constant.BASE_URL + '/login/login';\r\n    const {email, password, userInfo} = this.state;\r\n    var query = {\r\n      email: email,\r\n      password: password\r\n    };\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(query)\r\n    })\r\n    .then(res => res.json())\r\n    .then(\r\n      (result) => {\r\n        this.state.userInfo = result;\r\n        this.setState({userInfo: result});\r\n        this.routeUser();\r\n      },\r\n      (error) => {\r\n        return false;\r\n      }\r\n    );\r\n  }\r\n\r\n  registerUser() {\r\n    const url = Constant.BASE_URL + '/login/register';\r\n    const {name, email, password, location, userType, userInfo} = this.state;\r\n    var query = {\r\n      name: name,\r\n      email: email,\r\n      password: password,\r\n      location: location,\r\n      usertype: userType.value\r\n    };\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(query)\r\n    })\r\n    .then(res => res.json())\r\n    .then(\r\n      (result) => {\r\n        this.state.userInfo = result;\r\n        this.setState({userInfo: result});\r\n        this.routeUser();\r\n      },\r\n      (error) => {\r\n        return false;\r\n      }\r\n    );\r\n  }\r\n\r\n  routeUser() {\r\n    const {userInfo, redirect} = this.state;\r\n    if(userInfo) {\r\n      if(userInfo.usertype == 'SCHOLAR') {\r\n        redirect.flag = true;\r\n        redirect.path = '/scholar';\r\n      } else if(userInfo.usertype == 'MENTOR') {\r\n        redirect.flag = true;\r\n        redirect.path = '/mentor';\r\n      } else if(userInfo.usertype == 'ADMIN') {\r\n        redirect.flag = true;\r\n        redirect.path = '/admin';\r\n      }\r\n    }\r\n    this.setState({redirect: redirect});\r\n  }\r\n\r\n  validateInputs(action) {\r\n    const {name, email, password, location} = this.state;\r\n    if(!name && action == 'register')\r\n      return false;\r\n    if(!email)\r\n      return false;\r\n    if(email) {\r\n      if(!(email.includes('.') && email.includes('@')))\r\n        return false;\r\n    }\r\n    if(!password)\r\n      return false;\r\n    if(!location && action == 'register')\r\n      return false;\r\n    return true;\r\n  }\r\n\r\n  handleSelect = name => value => {\r\n\t\tthis.setState({[name]: value });\r\n\t}\r\n\r\n  handleEmailChange (e) {\r\n    this.setState({email: e.target.value})\r\n  }\r\n\r\n  handleNameChange (e) {\r\n    this.setState({name: e.target.value})\r\n  }\r\n\r\n  handlePasswordChange (e) {\r\n    this.setState({password: e.target.value})\r\n  }\r\n\r\n  handleLocationChange (e) {\r\n    this.setState({location: e.target.value})\r\n  }\r\n\r\n  getEmailElement() {\r\n    return (\r\n      <input type=\"text\" class=\"form-control\"\r\n        placeholder=\"Email\"\r\n        value={this.state.email}\r\n        onChange={this.handleEmailChange}/>\r\n    );\r\n  }\r\n\r\n  getPasswordElement() {\r\n    return (\r\n      <input type=\"text\" class=\"form-control\"\r\n        placeholder=\"Password\"\r\n        value={this.state.password}\r\n        onChange={this.handlePasswordChange}/>\r\n    );\r\n  }\r\n\r\n  getSubmitElement(action) {\r\n    return (\r\n      <div class=\"submit-button\">\r\n        <button type=\"button\" class=\"btn btn-info\"\r\n          style={{padding: '10px 70px'}}\r\n          onClick={() => this.handleClick(action)}>Submit</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  componentDidUpdate() {\r\n  }\r\n\r\n  render() {\r\n    const {redirect} = this.state;\r\n    if(redirect.flag) {\r\n      return (<Redirect to={redirect.path}/>);\r\n    }\r\n    return (\r\n      <div class=\"login-container\">\r\n        <Header/>\r\n        <div class=\"tabs-container\">\r\n          <Tabs>\r\n            <TabList>\r\n              <Tab>Login</Tab>\r\n              <Tab>Register</Tab>\r\n            </TabList>\r\n\r\n            <TabPanel>\r\n              <h5>Login</h5>\r\n              <div class=\"login-form\">\r\n                {this.getEmailElement()}\r\n                {this.getPasswordElement()}\r\n                {this.getSubmitElement('login')}\r\n              </div>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <h5>Register</h5>\r\n              <div class=\"register-form\">\r\n                <div class=\"usertype-element\">\r\n                  <Select\r\n                    placeholder=\"User Type\"\r\n                    isSearchable={true}\r\n                    isMulti={false}\r\n                    autoFocus={false}\r\n                    onChange={this.handleSelect('userType')}\r\n                    options={Constant.USER_TYPES}\r\n                    value={this.state.userType}\r\n                    name=\"userType\"\r\n                    maxMenuHeight={200}\r\n                  />\r\n                </div>\r\n                <input type=\"text\" class=\"form-control\"\r\n                  placeholder=\"Name\"\r\n                  value={this.state.name}\r\n                  onChange={this.handleNameChange}/>\r\n                {this.getEmailElement()}\r\n                {this.getPasswordElement()}\r\n                <input type=\"text\" class=\"form-control\"\r\n                  placeholder=\"Location\"\r\n                  value={this.state.location}\r\n                  onChange={this.handleLocationChange}/>\r\n                {this.getSubmitElement('register')}\r\n              </div>\r\n            </TabPanel>\r\n          </Tabs>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n"]},"metadata":{},"sourceType":"module"}