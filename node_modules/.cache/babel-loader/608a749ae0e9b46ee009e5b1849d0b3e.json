{"ast":null,"code":"var _jsxFileName = \"C:\\\\Leo\\\\Work\\\\FSD\\\\CaseStudy\\\\mentor-on-demand-ui\\\\src\\\\components\\\\CurrentTrainings\\\\CurrentTrainings.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport { connect } from 'react-redux';\nimport Header from '../Header/Header.js';\nimport './currenttrainings.css';\nimport { Constant } from '../../constants/AppConstants.js';\n\nfunction mapStateToProps(state, props) {\n  return {\n    userId: state.userId\n  };\n}\n\nclass CurrentTrainings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inprogressTrainings: [],\n      proposedTrainings: [],\n      confirmedTrainings: [],\n      userInfo: {},\n      scholar: this.props.userId\n    };\n    this.getUserInfo();\n    this.fetchTrainings('inprogress');\n    this.fetchTrainings('proposed');\n    this.fetchTrainings('confirmed');\n  }\n\n  getUserInfo() {\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(query)\n    }).then(res => res.json()).then(result => {\n      this.state.userInfo = result;\n      this.setState({\n        userInfo: result\n      });\n      this.routeUser();\n    }, error => {\n      return false;\n    });\n  }\n\n  fetchTrainings(status) {\n    const {\n      scholar\n    } = this.state;\n    var {\n      inprogressTrainings,\n      proposedTrainings,\n      confirmedTrainings\n    } = this.state;\n    const url = Constant.BASE_URL + '/training/scholar/' + scholar + '/status/' + status;\n    fetch(url, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => {\n      result.map(function (item) {\n        if (status == 'inprogress') {\n          inprogressTrainings.push(item);\n        } else if (status == 'proposed') {\n          proposedTrainings.push(item);\n        } else if (status == 'confirmed') {\n          confirmedTrainings.push(item);\n        }\n      });\n      this.setState({\n        inprogressTrainings: inprogressTrainings\n      });\n      this.setState({\n        proposedTrainings: proposedTrainings\n      });\n      this.setState({\n        confirmedTrainings: confirmedTrainings\n      });\n    });\n  }\n\n  getTable(status) {\n    return React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"col\", {\n      width: \"50\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"col\", {\n      width: \"150\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"col\", {\n      width: \"150\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"col\", {\n      width: \"50\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"col\", {\n      width: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"col\", {\n      width: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"col\", {\n      width: \"50\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Training ID\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Technology\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Mentor\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Progress\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Start Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"End Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Status\"))), this.getTableBody(status));\n  }\n\n  getTableBody(status) {\n    var rows = [];\n    const {\n      inprogressTrainings,\n      proposedTrainings,\n      confirmedTrainings\n    } = this.state;\n    var trainings = [];\n\n    if (status == 'inprogress') {\n      trainings = inprogressTrainings;\n    } else if (status == 'proposed') {\n      trainings = proposedTrainings;\n    } else if (status == 'confirmed') {\n      trainings = confirmedTrainings;\n    }\n\n    for (const [index, value] of trainings.entries()) {\n      rows.push(React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, value.id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, value.technology), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, value.mentor), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, value.progress), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, value.startdate), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, value.enddate), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, value.status)));\n    }\n\n    return React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, rows);\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      class: \"current-trainings-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"inprogress-trainings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"In-progress Trainings\"), this.getTable('inprogress')), React.createElement(\"div\", {\n      class: \"confirmed-trainings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Confirmed Trainings\"), this.getTable('confirmed')), React.createElement(\"div\", {\n      class: \"proposed-trainings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Proposed Trainings\"), this.getTable('proposed')));\n  }\n\n}\n\nexport default connect(mapStateToProps)(CurrentTrainings);","map":{"version":3,"sources":["C:/Leo/Work/FSD/CaseStudy/mentor-on-demand-ui/src/components/CurrentTrainings/CurrentTrainings.js"],"names":["React","Component","$","connect","Header","Constant","mapStateToProps","state","props","userId","CurrentTrainings","constructor","inprogressTrainings","proposedTrainings","confirmedTrainings","userInfo","scholar","getUserInfo","fetchTrainings","fetch","url","method","headers","body","JSON","stringify","query","then","res","json","result","setState","routeUser","error","status","BASE_URL","map","item","push","getTable","getTableBody","rows","trainings","index","value","entries","id","technology","mentor","progress","startdate","enddate","componentDidMount","componentDidUpdate","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport $ from 'jquery';\r\nimport {connect} from 'react-redux';\r\nimport Header from '../Header/Header.js';\r\nimport './currenttrainings.css';\r\nimport {Constant} from '../../constants/AppConstants.js';\r\n\r\nfunction mapStateToProps(state, props) {\r\n    return {\r\n      userId: state.userId\r\n    };\r\n}\r\n\r\nclass CurrentTrainings extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      inprogressTrainings: [],\r\n      proposedTrainings: [],\r\n      confirmedTrainings: [],\r\n      userInfo: {},\r\n      scholar: this.props.userId\r\n    };\r\n    this.getUserInfo();\r\n    this.fetchTrainings('inprogress');\r\n    this.fetchTrainings('proposed');\r\n    this.fetchTrainings('confirmed');\r\n  }\r\n\r\n  getUserInfo() {\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(query)\r\n    })\r\n    .then(res => res.json())\r\n    .then(\r\n      (result) => {\r\n        this.state.userInfo = result;\r\n        this.setState({userInfo: result});\r\n        this.routeUser();\r\n      },\r\n      (error) => {\r\n        return false;\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  fetchTrainings(status) {\r\n    const {scholar} = this.state;\r\n    var {inprogressTrainings, proposedTrainings, confirmedTrainings} = this.state;\r\n    const url = Constant.BASE_URL + '/training/scholar/' + scholar + '/status/' + status;\r\n    fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      }})\r\n    .then(res => res.json())\r\n    .then(\r\n      (result) => {\r\n        result.map(function(item) {\r\n          if(status == 'inprogress') {\r\n            inprogressTrainings.push(item);\r\n          } else if (status == 'proposed') {\r\n            proposedTrainings.push(item);\r\n          } else if (status == 'confirmed') {\r\n            confirmedTrainings.push(item);\r\n          }\r\n        });\r\n        this.setState({inprogressTrainings: inprogressTrainings});\r\n        this.setState({proposedTrainings: proposedTrainings});\r\n        this.setState({confirmedTrainings: confirmedTrainings});\r\n      }\r\n    );\r\n  }\r\n\r\n  getTable(status) {\r\n    return (\r\n      <table>\r\n        <col width=\"50\"/>\r\n        <col width=\"150\"/>\r\n        <col width=\"150\"/>\r\n        <col width=\"50\"/>\r\n        <col width=\"100\"/>\r\n        <col width=\"100\"/>\r\n        <col width=\"50\"/>\r\n        <thead>\r\n          <tr>\r\n            <th>Training ID</th>\r\n            <th>Technology</th>\r\n            <th>Mentor</th>\r\n            <th>Progress</th>\r\n            <th>Start Date</th>\r\n            <th>End Date</th>\r\n            <th>Status</th>\r\n          </tr>\r\n        </thead>\r\n        {this.getTableBody(status)}\r\n      </table>\r\n    );\r\n  }\r\n\r\n  getTableBody(status) {\r\n    var rows = [];\r\n    const {inprogressTrainings, proposedTrainings, confirmedTrainings} = this.state;\r\n    var trainings = [];\r\n    if(status == 'inprogress') {\r\n      trainings = inprogressTrainings;\r\n    } else if (status == 'proposed') {\r\n      trainings = proposedTrainings;\r\n    } else if (status == 'confirmed') {\r\n      trainings = confirmedTrainings;\r\n    }\r\n    for (const [index, value] of trainings.entries()) {\r\n      rows.push(\r\n        <tr>\r\n          <td>{value.id}</td>\r\n          <td>{value.technology}</td>\r\n          <td>{value.mentor}</td>\r\n          <td>{value.progress}</td>\r\n          <td>{value.startdate}</td>\r\n          <td>{value.enddate}</td>\r\n          <td>{value.status}</td>\r\n        </tr>\r\n      );\r\n    }\r\n    return (\r\n      <tbody>\r\n        {rows}\r\n      </tbody>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  componentDidUpdate() {\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"current-trainings-container\">\r\n        <div class=\"inprogress-trainings\">\r\n          <h5>In-progress Trainings</h5>\r\n          {this.getTable('inprogress')}\r\n        </div>\r\n        <div class=\"confirmed-trainings\">\r\n          <h5>Confirmed Trainings</h5>\r\n          {this.getTable('confirmed')}\r\n        </div>\r\n        <div class=\"proposed-trainings\">\r\n          <h5>Proposed Trainings</h5>\r\n          {this.getTable('proposed')}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(CurrentTrainings);\r\n"]},"metadata":{},"sourceType":"module"}